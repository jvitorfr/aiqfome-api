version: '3.8'

services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: aiqfome-api-app
        volumes:
            - .:/var/www
        depends_on:
            - db
            - redis
        networks:
            - aiqfome-network
        environment:
            APP_ENV: ${APP_ENV}
            APP_DEBUG: ${APP_DEBUG}
            APP_KEY: ${APP_KEY}
            APP_URL: ${APP_URL}
            DB_CONNECTION: ${DB_CONNECTION}
            DB_HOST: ${DB_HOST}
            DB_PORT: ${DB_PORT}
            DB_DATABASE: ${DB_DATABASE}
            DB_USERNAME: ${DB_USERNAME}
            DB_PASSWORD: ${DB_PASSWORD}
            CACHE_DRIVER: ${CACHE_DRIVER}
            REDIS_CLIENT: ${REDIS_CLIENT}
            REDIS_HOST: ${REDIS_HOST}
            REDIS_PORT: ${REDIS_PORT}
            QUEUE_CONNECTION: ${QUEUE_CONNECTION}

    web:
        image: nginx:stable
        container_name: aiqfome-api-web
        ports:
            - "8080:80"
        volumes:
            - .:/var/www
            - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - app
        networks:
            - aiqfome-network

    redis:
        image: redis:7
        container_name: aiqfome-api-redis
        ports:
            - "6379:6379"
        volumes:
            - redis-data:/data
        restart: unless-stopped
        networks:
            - aiqfome-network

    db:
        image: postgres:15
        container_name: aiqfome-db
        environment:
            POSTGRES_DB: ${DB_DATABASE}
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
        ports:
            - "${DB_PORT}:5432"
        volumes:
            - pgdata:/var/lib/postgresql/data
        networks:
            - aiqfome-network

networks:
    aiqfome-network:
        driver: bridge

volumes:
    pgdata:
    redis-data:
